pipeline {
    agent any
    
    tools {
        nodejs 'NodeJS22'
    }
    
    environment { 
        registryCredential = 'harsha3330-dockerhub'
        buildTimestamp = new java.text.SimpleDateFormat('yyyyMMdd-HHmmss').format(new java.util.Date())
        dockerImage = "harsha3330/mocktest-frontend:${env.FrontendBranch}-${env.BUILD_NUMBER}-date-${buildTimestamp}-dev"
    }
    
    stages {
        
        
        stage("Front-end Clone") {
            steps {
                script {
                    sh "rm -rf ./mocktest-frontend"
                    sh "git clone https://github.com/Harsha190202/mocktest-frontend.git -b ${env.FrontendBranch}"
                }
            }
        }

        stage("Front-end Dependencies") {
            steps {
                dir("./mocktest-frontend/") {
                    script {
                        sh "rm -rf node_modules"
                        sh "npm cache clean --force"
                        sh "npm install"
                    }
                }
            }
        }
        
        stage("Front-end Build") {
            steps {
                dir("./mocktest-frontend/") {
                    script {
                        sh "npm run build"
                    }
                }
            }
        }

        stage("Docker Build and Push") {
            steps {
                script {
                    sh "docker build -f applications/mocktest-frontend/Dockerfile -t mocktest-frontend ."
                    sh "docker tag mocktest-frontend:latest ${dockerImage}"
                    sh "docker push ${dockerImage}"
                    sh "docker rmi ${dockerImage}"
                }
            }
        }


        stage("Charts Clone") {
            steps {
                script {
                    sh "rm -rf ./charts"
                    sh "git clone https://github.com/Harsha190202/charts.git -b ${env.GitBranch}"
                }
            }
        }

        stage("Deployment") {
            steps {
                script {
                    withCredentials([string(credentialsId: 'github-pat', variable: 'GITHUB_TOKEN')]) {
                    sh '''
                    echo "Changing to charts directory"
                    cd charts

                    git config  --global user.email "jenkins@gmail.com"
                    git config  --global user.name "jenkins"
                    git pull origin main
                        
                    # Update image reference in deployment.yaml
                    sed -i 's|image: .*|image: harsha3330/mocktest-frontend:${env.FrontendBranch}-${BUILD_NUMBER}-date-${BUILD_TIMESTAMP}-dev|g' applications/mocktest-frontend/deployment.yaml
                        
                    # Commit and push changes
                    git add applications/mocktest-frontend/deployment.yaml
                    git commit -m "Jenkins image update"
                    git pull origin main
                    git push origin main
                    '''
                    }
                }
            }
        }
        
    }
}
