pipeline {
    agent any
    
    tools {
        nodejs '22.3.0'
    }
    
    environment { 
        registryCredential = 'harsha3330-dockerhub'
        dockerImage = ''
    }
    
    stages {
        stage("Charts Clone") {
            steps {
                script {
                    sh "rm -rf ./charts"
                    sh "git clone https://github.com/Harsha190202/charts.git -b ${env.ChartsBranch}"
                }
            }
        }
        
        stage("Front-end Clone") {
            steps {
                script {
                    sh "rm -rf ./mocktest-frontend"
                    sh "git clone https://github.com/Harsha190202/mocktest-frontend.git -b ${env.FrontendBranch}"
                }
            }
        }

        stage("Front-end Dependencies") {
            steps {
                dir("./mocktest-frontend/") {
                    script {
                        sh "rm -rf node_modules"
                        sh "npm cache clean --force"
                        sh "npm install"
                    }
                }
            }
        }
        
        stage("Front-end Build") {
            steps {
                dir("./mocktest-frontend/") {
                    script {
                        sh "npm run build"
                    }
                }
            }
        }

        stage("Docker Build and Push") {
            steps {
                script {
                    sh "sudo docker build -f applications/mocktest-frontend/Dockerfile -t mocktest-frontend ."
                    dockerImage = "harsha3330/mocktest-frontend:${env.FrontendBranch}-${BUILD_NUMBER}-date-${BUILD_TIMESTAMP}-dev"
                    sh "sudo docker tag mocktest-frontend:latest ${dockerImage}"
                    docker.withRegistry('https://registry.hub.docker.com', registryCredential) {
                        sh "sudo docker push ${dockerImage}"
                    }
                    sh "sudo docker rmi ${dockerImage}"
                }
            }
        }

        stage("Deployment") {
    steps {
        script {
            sh """
                sed -i 's|image: .*|image: harsha3330/mocktest-frontend:${env.FrontendBranch}-${BUILD_NUMBER}-date-${BUILD_TIMESTAMP}-dev|g' charts/applications/mocktest-frontend/deployment.yaml
                cd charts/applications/mocktest-frontend
                git add deployment.yaml
                git commit -m "Jenkins image update"
                git pull 
            """
            
            withCredentials([gitUsernamePassword(credentialsId: 'github-harsha190202', gitToolName: 'Default')]) {
                sh "git push"
            }
        }
    }
}

        
    }
}
